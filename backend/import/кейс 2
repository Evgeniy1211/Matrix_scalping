–°—É–ø–µ—Ä üëç –ø–æ–Ω—è–ª ‚Äî —Ç–µ–±–µ –Ω—É–∂–µ–Ω —Ç–∞–∫–æ–π –∂–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ä–∞–∑–±–æ—Ä (–∫–∞–∫ –º—ã —Å–¥–µ–ª–∞–ª–∏ –¥–ª—è –∫–µ–π—Å–∞ 1 —Å Random Forest), –Ω–æ —Ç–µ–ø–µ—Ä—å –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –∫–µ–π—Å–∞: —Å–∫–∞–ª—å–ø–µ—Ä –Ω–∞ Reinforcement Learning (PPO –∞–≥–µ–Ω—Ç). –¢–æ –µ—Å—Ç—å –º—ã –±–µ—Ä—ë–º Lego-–ø—Ä–æ—Ç–æ—Ç–∏–ø –∏–∑ 2020+ –∏ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –µ–≥–æ –¥–æ —É—Ä–æ–≤–Ω—è production-–¢–ó.


---

üèóÔ∏è Production-–∫–µ–π—Å 2: –°–∫–∞–ª—å–ø–∏–Ω–≥ —Å Reinforcement Learning (PPO-–∞–≥–µ–Ω—Ç)

üéØ –¶–µ–ª—å

–°–æ–∑–¥–∞—Ç—å —Ç–æ—Ä–≥–æ–≤—É—é –º–∞—à–∏–Ω—É, –∫–æ—Ç–æ—Ä–∞—è —É—á–∏—Ç—Å—è —Å–∞–º–∞:

–≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Äî –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –º–∏–Ω—É—Ç–Ω—ã–µ —Å–≤–µ—á–∏,

–∞–≥–µ–Ω—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ä–µ—à–µ–Ω–∏—è BUY / SELL / HOLD,

—Ü–µ–ª—å –æ–±—É—á–µ–Ω–∏—è = –º–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–∏–±—ã–ª–∏,

—É—á—ë—Ç —Ä–∏—Å–∫–∞ –∏ –∫–æ–º–∏—Å—Å–∏–π,

—Ä–∞–±–æ—Ç–∞ –∏ –≤ backtest, –∏ –≤ live.



---

üß© –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø–∞–π–ø–ª–∞–π–Ω–∞

[ Binance API ] ‚Üí [ Data Preprocessing ] ‚Üí [ RL Environment (Gym) ]
‚Üí [ PPO Agent Training ] ‚Üí [ Evaluation & Backtest ] ‚Üí [ Live Trading Engine ]


---

üìÇ –ú–æ–¥—É–ª–∏

1. –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö

–ò—Å—Ç–æ—á–Ω–∏–∫: Binance (—á–µ—Ä–µ–∑ ccxt).

–ú–µ—Ç–æ–¥: fetch_ohlcv(symbol='BTC/USDT', timeframe='1m', limit=1000).

–§–æ—Ä–º–∞—Ç: OHLCV.

Live-—Ä–µ–∂–∏–º: WebSocket (—á–µ—Ä–µ–∑ ccxt.pro).



---

2. –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞

–ò–Ω–¥–µ–∫—Å: timestamp.

–ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ float64.

–û—á–∏—Å—Ç–∫–∞ –≤—ã–±—Ä–æ—Å–æ–≤ –∏ NaN.

–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ü–µ–Ω—ã –¥–µ–ª–∏–º –Ω–∞ close[0]).



---

3. RL-—Å—Ä–µ–¥–∞ (Gym Environment)

–û—Å–Ω–æ–≤–∞: gym-anytrading (StocksEnv).

–ù–∞–±–ª—é–¥–µ–Ω–∏–µ (Observation): –æ–∫–Ω–æ –∏–∑ N –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–≤–µ—á–µ–π (window_size=30).

–î–µ–π—Å—Ç–≤–∏—è (Action Space):

0 = HOLD,

1 = BUY,

2 = SELL.


–ù–∞–≥—Ä–∞–¥–∞ (Reward):

–∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–∞–ø–∏—Ç–∞–ª–∞ –Ω–∞ —à–∞–≥–µ,

–º–æ–∂–Ω–æ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å:

–≤—ã—á–∏—Ç–∞—Ç—å –∫–æ–º–∏—Å—Å–∏—é Binance (0.1%),

—à—Ç—Ä–∞—Ñ –∑–∞ —Ä–∏—Å–∫ (–ø—Ä–æ—Å–∞–¥–∫—É),

–±–æ–Ω—É—Å –∑–∞ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç.





---

4. –ú–æ–¥–µ–ª—å (RL-–∞–≥–µ–Ω—Ç)

–ê–ª–≥–æ—Ä–∏—Ç–º: PPO (Proximal Policy Optimization).

–†–µ–∞–ª–∏–∑–∞—Ü–∏—è: stable-baselines3.

–ü–æ–ª–∏—Ç–∏–∫–∞: MlpPolicy (–º–Ω–æ–≥–æ—Å–ª–æ–π–Ω—ã–π –ø–µ—Ä—Å–µ–ø—Ç—Ä–æ–Ω).

–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:

total_timesteps=100000 (–¥–ª—è –Ω–∞—á–∞–ª–∞ 10k),

learning_rate=0.0003,

gamma=0.99,

batch_size=64.




---

5. –û–±—É—á–µ–Ω–∏–µ

–¶–∏–∫–ª –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:

1. –ê–≥–µ–Ω—Ç –ø–æ–ª—É—á–∞–µ—Ç –æ–∫–Ω–æ —Å–≤–µ—á–µ–π (obs).


2. –í—ã–±–∏—Ä–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ (BUY/SELL/HOLD).


3. –°—Ä–µ–¥–∞ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –µ–≥–æ ‚Üí –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ + –Ω–∞–≥—Ä–∞–¥–∞.


4. –ê–≥–µ–Ω—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.



–°–æ—Ö—Ä–∞–Ω—è–µ–º –º–æ–¥–µ–ª—å: model.save("ppo_scalper").



---

6. –û—Ü–µ–Ω–∫–∞ (Backtest)

–ü—Ä–æ–≥–æ–Ω—è–µ–º –∞–≥–µ–Ω—Ç–∞ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–º —É—á–∞—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.

–ú–µ—Ç—Ä–∏–∫–∏:

total reward (—Å—É–º–º–∞—Ä–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞),

cumulative PnL (–ø—Ä–∏–±—ã–ª—å/—É–±—ã—Ç–æ–∫),

max drawdown (–ø—Ä–æ—Å–∞–¥–∫–∞),

Sharpe ratio.


–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è: –≥—Ä–∞—Ñ–∏–∫ —Ü–µ–Ω—ã + —Å–¥–µ–ª–∫–∏ (–∑–µ–ª—ë–Ω—ã–µ —Ç–æ—á–∫–∏ = BUY, –∫—Ä–∞—Å–Ω—ã–µ = SELL).



---

7. Live Trading Engine

–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: ccxt.pro (WebSocket).

–ê–ª–≥–æ—Ä–∏—Ç–º:

1. –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—É—é —Å–≤–µ—á—É.


2. –û–±–Ω–æ–≤–ª—è–µ–º –æ–∫–Ω–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π.


3. –ê–≥–µ–Ω—Ç –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ.


4. –ï—Å–ª–∏ BUY/SELL ‚Üí –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ä–¥–µ—Ä —á–µ—Ä–µ–∑ create_market_order.


5. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–æ–ø-–ª–æ—Å—Å/—Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç.



–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: CSV –∏–ª–∏ –±–∞–∑–∞ (timestamp, action, price, size, PnL).



---

‚öôÔ∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏

–°—Ä–µ–¥–∞: Python 3.9+.

–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏:

ccxt, ccxt.pro,

pandas, numpy,

matplotlib,

gym-anytrading,

stable-baselines3.


–ñ–µ–ª–µ–∑–æ:

CPU –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ (GPU —É—Å–∫–æ—Ä—è–µ—Ç).

RAM: 4+ GB.


–û–±—É—á–µ–Ω–∏–µ: 10‚Äì30 –º–∏–Ω –Ω–∞ CPU (100k —à–∞–≥–æ–≤).



---

‚úÖ –ü–ª—é—Å—ã

–ù–µ –Ω—É–∂–Ω—ã —Ä–∞–∑–º–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.

–ê–≥–µ–Ω—Ç —Å–∞–º –∏—â–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.

–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π RL-–∞–ª–≥–æ—Ä–∏—Ç–º (PPO).

–ì–∏–±–∫–æ—Å—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –Ω–∞–≥—Ä–∞–¥—ã.


‚ùå –ú–∏–Ω—É—Å—ã

–î–æ–ª–≥–æ –æ–±—É—á–∞–µ—Ç—Å—è.

–ú–æ–∂–µ—Ç –ø–µ—Ä–µ–æ–±—É—á–∞—Ç—å—Å—è (–Ω—É–∂–Ω—ã —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã –¥–∞–Ω–Ω—ã—Ö).

–¢—Ä–µ–±—É–µ—Ç –∞–∫–∫—É—Ä–∞—Ç–Ω–æ–≥–æ —Ç—é–Ω–∏–Ω–≥–∞ –≥–∏–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.



---

üöÄ –£–ª—É—á—à–µ–Ω–∏—è

–î–æ–±–∞–≤–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –≤ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è (RSI, EMA).

–£—Ç–æ—á–Ω–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É: –≤—ã—á–∏—Ç–∞—Ç—å –∫–æ–º–∏—Å—Å–∏–∏, —à—Ç—Ä–∞—Ñ –∑–∞ –ø—Ä–æ—Å–∞–¥–∫—É.

–ü–µ—Ä–µ–π—Ç–∏ –∫ –∞–Ω—Å–∞–º–±–ª—é –∞–≥–µ–Ω—Ç–æ–≤ (–Ω–µ—Å–∫–æ–ª—å–∫–æ PPO/DQN).

–ü—Ä–∏–º–µ–Ω—è—Ç—å transfer learning (–æ–±—É—á–µ–Ω–∏–µ –Ω–∞ BTC, –ø–µ—Ä–µ–Ω–æ—Å –Ω–∞ ETH).



---

üìä –ò—Ç–æ–≥:
–≠—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π production-–∫–µ–π—Å —Å–∫–∞–ª—å–ø–µ—Ä–∞ (2020+), –≥–¥–µ –∞–≥–µ–Ω—Ç —Å–∞–º —É—á–∏—Ç—Å—è –Ω–∞ –ø—Ä–∏–±—ã–ª–∏, –∞ –Ω–µ –Ω–∞ –º–µ—Ç–∫–∞—Ö. –¢–∞–∫–æ–π –±–ª–æ–∫ –º–æ–∂–Ω–æ –∑–∞–Ω–æ—Å–∏—Ç—å –≤ —Ç–≤–æ—é –º–∞—Ç—Ä–∏—Ü—É –∫–∞–∫ —Ä–µ–≤–∏–∑–∏—é 2, —ç–≤–æ–ª—é—Ü–∏—é –ø–æ—Å–ª–µ Random Forest.


---
–í–æ—Ç —ç—Ç–æ —Ç–æ—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å üôå ‚Äî —è –ø–æ–Ω—è–ª, —Ç–µ–±–µ –Ω—É–∂–µ–Ω —Ç–∞–∫–æ–π –∂–µ ¬´Lego-—Ä–µ—Ü–µ–ø—Ç¬ª, –Ω–æ –±–æ–ª–µ–µ —Å–≤–µ–∂–∏–π, –Ω–µ –∏–∑ 2015‚Äì2017 –≥–æ–¥–æ–≤ (–ß–∞–Ω –∏ Kissell), –∞ –∏–∑ —Ç–æ–≥–æ, —á—Ç–æ —Ä–µ–∞–ª—å–Ω–æ –ø–æ—è–≤–ª—è–ª–æ—Å—å –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≥–æ–¥—ã (2020+).

–î–∞, —Ç–∞–∫–∏–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø—ã —Ç–æ–∂–µ –æ–ø–∏—Å–∞–Ω—ã –≤ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö (–∫—É—Ä—Å—ã, –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, –¥–µ–º–æ-–∫–µ–π—Å—ã), –∏ –æ–Ω–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –±–æ–ª–µ–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏ –ø–æ–¥—Ö–æ–¥—ã.


---

üèóÔ∏è –ü—Ä–∏–º–µ—Ä 2: –°–∫–∞–ª—å–ø–∏–Ω–≥ —Å Reinforcement Learning (PPO –∞–≥–µ–Ω—Ç, 2020+)

üìö –ò—Å—Ç–æ—á–Ω–∏–∫

Deep Reinforcement Learning for Automated Stock Trading: An Ensemble Strategy (arXiv, 2020).

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫—É—Ä—Å–∞—Ö –ø–æ RL-—Ç—Ä–µ–π–¥–∏–Ω–≥—É (2020‚Äì2022).

–í –æ—Å–Ω–æ–≤–µ ‚Äî OpenAI Gym + Stable-Baselines3.



---

üìå –ò–¥–µ—è

–ê–≥–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —Å–∫–∞–ª—å–ø–µ—Ä: –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ä–µ—à–µ–Ω–∏–µ ‚Äî BUY, SELL –∏–ª–∏ HOLD.

–ü–æ–ª—É—á–∞–µ—Ç –Ω–∞–≥—Ä–∞–¥—É = –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–∞–ø–∏—Ç–∞–ª–∞.

–£—á–∏—Ç—Å—è —Å–∞–º, –±–µ–∑ —Ä–∞–∑–º–µ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö.



---

üß© Lego-–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã

1. –î–∞–Ω–Ω—ã–µ

–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –º–∏–Ω—É—Ç–Ω—ã–µ –±–∞—Ä—ã (OHLCV).

–ú–æ–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å —Å Binance —á–µ—Ä–µ–∑ ccxt.



2. –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏

pip install pandas numpy matplotlib stable-baselines3 gym-anytrading ccxt

stable-baselines3 ‚Üí –≥–æ—Ç–æ–≤—ã–µ RL-–∞–ª–≥–æ—Ä–∏—Ç–º—ã (PPO, DQN).

gym-anytrading ‚Üí —Å—Ä–µ–¥–∞ –¥–ª—è —Ç—Ä–µ–π–¥–∏–Ω–≥–∞.

ccxt ‚Üí –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å –±–∏—Ä–∂–∏.



3. –ú–æ–¥–µ–ª—å

PPO (Proximal Policy Optimization) ‚Äî —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π RL-–∞–ª–≥–æ—Ä–∏—Ç–º.





---

‚öôÔ∏è –ö–æ–¥-—Å–∫–µ–ª–µ—Ç (RL-—Å–∫–∞–ª—å–ø–µ—Ä)

import ccxt
import pandas as pd
import gym
import gym_anytrading
from stable_baselines3 import PPO
import matplotlib.pyplot as plt

# === 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å Binance ===
exchange = ccxt.binance()
symbol = 'BTC/USDT'
timeframe = '1m'
limit = 1000
ohlcv = exchange.fetch_ohlcv(symbol, timeframe, limit=limit)

df = pd.DataFrame(ohlcv, columns=['timestamp','open','high','low','close','volume'])
df['timestamp'] = pd.to_datetime(df['timestamp'], unit='ms')
df.set_index('timestamp', inplace=True)

# === 2. –°–æ–∑–¥–∞—ë–º —Ç—Ä–µ–π–¥–∏–Ω–≥–æ–≤—É—é —Å—Ä–µ–¥—É ===
import gym_anytrading.envs
from gym_anytrading.envs import StocksEnv

class CustomEnv(StocksEnv):
    _process_data = StocksEnv._process_data
    _calculate_reward = StocksEnv._calculate_reward
    _take_action = StocksEnv._take_action

window_size = 30
env = CustomEnv(df=df, window_size=window_size, frame_bound=(30, len(df)))

# === 3. –û–±—É—á–∞–µ–º PPO-–∞–≥–µ–Ω—Ç–∞ ===
model = PPO("MlpPolicy", env, verbose=1)
model.learn(total_timesteps=10000)

# === 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º ===
obs = env.reset()
while True:
    action, _ = model.predict(obs)
    obs, reward, done, info = env.step(action)
    if done:
        print("Total reward:", info)
        break

# === 5. –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è ===
plt.figure(figsize=(15,6))
env.render_all()
plt.show()


---

üîç –ß—Ç–æ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥

1. –ó–∞–≥—Ä—É–∂–∞–µ—Ç –º–∏–Ω—É—Ç–Ω—ã–µ —Å–≤–µ—á–∏ BTC/USDT —Å Binance.


2. –û–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∏—Ö –≤ —Å—Ä–µ–¥—É gym-anytrading.


3. –ó–∞–ø—É—Å–∫–∞–µ—Ç PPO-–∞–≥–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —É—á–∏—Ç—Å—è —Å–∞–º:

BUY ‚Üí –µ—Å–ª–∏ –¥–≤–∏–∂–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö –ø—Ä–∏–Ω–æ—Å–∏—Ç –ø—Ä–∏–±—ã–ª—å,

SELL ‚Üí –µ—Å–ª–∏ –≤–Ω–∏–∑,

HOLD ‚Üí –µ—Å–ª–∏ —Ä—ã–Ω–æ–∫ ¬´–ø–ª–æ—Å–∫–∏–π¬ª.



4. –ü–æ—Å–ª–µ –æ–±—É—á–µ–Ω–∏—è –∞–≥–µ–Ω—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫–∏–µ —Å–¥–µ–ª–∫–∏ —Å–¥–µ–ª–∞–ª –∏ –∫–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—à–µ–ª.




---

üöÄ –ü–æ—á–µ–º—É —ç—Ç–æ —Å–≤–µ–∂–µ–µ –∏ –∫—Ä—É—á–µ, —á–µ–º Random Forest –∏–∑ –ß–∞–Ω–∞

–ù–µ –Ω—É–∂–Ω–æ –≤—Ä—É—á–Ω—É—é —Ä–∞–∑–º–µ—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ (–º–µ—Ç–∫–∏).

–ê–≥–µ–Ω—Ç —É—á–∏—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ –ø—Ä–∏–±—ã–ª–∏, –∞ –Ω–µ –Ω–∞ ¬´—É–≥–∞–¥–∞–ª/–Ω–µ —É–≥–∞–¥–∞–ª¬ª.

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ (stable-baselines3, 2021+).

–õ–µ–≥–∫–æ —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è: –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã, –∫–æ–º–∏—Å—Å–∏–∏, —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç.



---

üîß –ß—Ç–æ –¥–∞–ª—å—à–µ

–ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å—Ä–µ–¥—É –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã (RSI, EMA).

–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É —Ç–∞–∫, —á—Ç–æ–±—ã —É—á–∏—Ç—ã–≤–∞—Ç—å –∫–æ–º–∏—Å—Å–∏—é –∏ —Å—Ç–æ–ø-–ª–æ—Å—Å.

–ü—Ä–æ–≥–æ–Ω—è—Ç—å –Ω–∞ —Ä–∞–∑–Ω—ã—Ö –ø–∞—Ä–∞—Ö (ETH/USDT, SOL/USDT).



---

üëâ –≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä ‚Äî —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π Lego-—Ä–µ—Ü–µ–ø—Ç. –ï–≥–æ —Ä–µ–∞–ª—å–Ω–æ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –∏ –ø—Ä—è–º–æ –≤ Colab –ø–æ–≥–æ–Ω—è—Ç—å. –û–Ω —Å–æ–±–µ—Ä—ë—Ç—Å—è ¬´–∏–∑ –∫–æ—Ä–æ–±–∫–∏¬ª.

