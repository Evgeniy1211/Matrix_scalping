@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: hsl(210 40% 98%);
  --foreground: hsl(222 84% 5%);
  --border: hsl(214 32% 91%);
  --card: hsl(0 0% 100%);
  --card-foreground: hsl(222 84% 5%);
  --card-border: hsl(214 32% 91%);
  --sidebar: hsl(0 0% 100%);
  --sidebar-foreground: hsl(222 84% 5%);
  --sidebar-border: hsl(214 32% 91%);
  --sidebar-primary: hsl(221 83% 53%);
  --sidebar-primary-foreground: hsl(210 40% 98%);
  --sidebar-accent: hsl(142 76% 36%);
  --sidebar-accent-foreground: hsl(210 40% 98%);
  --sidebar-ring: hsl(221 83% 53%);
  --popover: hsl(0 0% 100%);
  --popover-foreground: hsl(222 84% 5%);
  --popover-border: hsl(214 32% 91%);
  --primary: hsl(221 83% 53%);
  --primary-foreground: hsl(210 40% 98%);
  --secondary: hsl(38 92% 50%);
  --secondary-foreground: hsl(222 84% 5%);
  --muted: hsl(210 40% 96%);
  --muted-foreground: hsl(215 16% 47%);
  --accent: hsl(142 76% 36%);
  --accent-foreground: hsl(210 40% 98%);
  --destructive: hsl(0 84% 60%);
  --destructive-foreground: hsl(210 40% 98%);

  --input: hsl(214 32% 91%);
  --ring: hsl(221 83% 53%);
  --chart-1: hsl(221 83% 53%);
  --chart-2: hsl(142 76% 36%);
  --chart-3: hsl(38 92% 50%);
  --chart-4: hsl(280 100% 70%);
  --chart-5: hsl(340 75% 55%);

  --font-sans: Inter, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: JetBrains Mono, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(214 32% 91% / 0.1);
  --shadow-xs: 0px 2px 0px 0px hsl(214 32% 91% / 0.1);
  --shadow-sm: 0px 2px 0px 0px hsl(214 32% 91% / 0.1), 0px 1px 2px -1px hsl(214 32% 91% / 0.1);
  --shadow: 0px 2px 0px 0px hsl(214 32% 91% / 0.1), 0px 1px 2px -1px hsl(214 32% 91% / 0.1);
  --shadow-md: 0px 2px 0px 0px hsl(214 32% 91% / 0.1), 0px 2px 4px -1px hsl(214 32% 91% / 0.1);
  --shadow-lg: 0px 2px 0px 0px hsl(214 32% 91% / 0.1), 0px 4px 6px -1px hsl(214 32% 91% / 0.1);
  --shadow-xl: 0px 2px 0px 0px hsl(214 32% 91% / 0.1), 0px 8px 10px -1px hsl(214 32% 91% / 0.1);
  --shadow-2xl: 0px 2px 0px 0px hsl(214 32% 91% / 0.1);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .20);
  --badge-outline: rgba(255,255,255, .15);

  --opaque-button-border-intensity: 15;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .08);
  --elevate-2: rgba(255,255,255, .15);

  --background: hsl(222 84% 8%);
  --foreground: hsl(210 40% 95%);
  --border: hsl(217 32% 25%);
  --card: hsl(222 84% 10%);
  --card-foreground: hsl(210 40% 95%);
  --card-border: hsl(217 32% 30%);
  --sidebar: hsl(222 84% 10%);
  --sidebar-foreground: hsl(210 40% 95%);
  --sidebar-border: hsl(217 32% 25%);
  --sidebar-primary: hsl(221 83% 60%);
  --sidebar-primary-foreground: hsl(210 40% 98%);
  --sidebar-accent: hsl(142 76% 45%);
  --sidebar-accent-foreground: hsl(210 40% 98%);
  --sidebar-ring: hsl(221 83% 60%);
  --popover: hsl(222 84% 12%);
  --popover-foreground: hsl(210 40% 95%);
  --popover-border: hsl(217 32% 30%);
  --primary: hsl(221 83% 60%);
  --primary-foreground: hsl(210 40% 98%);
  --secondary: hsl(38 92% 55%);
  --secondary-foreground: hsl(222 84% 8%);
  --muted: hsl(217 32% 20%);
  --muted-foreground: hsl(215 20% 75%);
  --accent: hsl(142 76% 45%);
  --accent-foreground: hsl(210 40% 98%);
  --destructive: hsl(0 84% 65%);
  --destructive-foreground: hsl(210 40% 98%);

  /* Used as the border around inputs. Dark mode: Should be a border that is light enough to have high contrast when rendered on a --card background. More contrast than standard --border */
  --input: hsl(217 32% 30%);
  --ring: hsl(221 83% 60%);
  --chart-1: hsl(221 83% 60%);
  --chart-2: hsl(142 76% 45%);
  --chart-3: hsl(38 92% 55%);
  --chart-4: hsl(280 100% 75%);
  --chart-5: hsl(340 75% 60%);

  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.3);
  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.3);
  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.3), 0px 1px 2px -1px hsl(0 0% 0% / 0.3);
  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.3), 0px 1px 2px -1px hsl(0 0% 0% / 0.3);
  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.3), 0px 2px 4px -1px hsl(0 0% 0% / 0.3);
  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.3), 0px 4px 6px -1px hsl(0 0% 0% / 0.3);
  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.3), 0px 8px 10px -1px hsl(0 0% 0% / 0.3);
  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.3);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Evolution matrix specific styles */
  .evolution-cell {
    transition: all 0.2s ease;
    cursor: pointer;
  }
  
  .evolution-cell:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }
  
  .empty-cell {
    background: hsl(var(--muted));
    color: hsl(var(--muted-foreground));
  }
  
  .early-tech {
    background: hsl(var(--accent));
    color: hsl(var(--accent-foreground));
  }
  
  .modern-tech {
    background: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
  }
  
  .current-tech {
    background: hsl(var(--secondary));
    color: hsl(var(--secondary-foreground));
  }
  
  /* Dynamic matrix styles */
  .dynamic-matrix-cell {
    transition: all 0.2s ease;
    position: relative;
  }
  
  .dynamic-matrix-cell:hover {
    transform: scale(1.02);
    z-index: 10;
  }
  
  .evolution-arrow {
    background: linear-gradient(90deg, transparent 0%, hsl(var(--primary)) 50%, transparent 100%);
  }
  
  .technology-connection {
    position: relative;
  }
  
  .technology-connection::before {
    content: '';
    position: absolute;
    left: -5px;
    top: 50%;
    width: 10px;
    height: 2px;
    background: hsl(var(--primary));
    transform: translateY(-50%);
  }

  /* D3 Tree styles */
  .node {
    cursor: pointer;
    stroke: hsl(var(--border));
    stroke-width: 2px;
  }
  
  .node:hover {
    stroke: hsl(var(--primary));
    stroke-width: 3px;
  }
  
  .link {
    stroke: hsl(var(--muted-foreground));
    stroke-opacity: 0.6;
    stroke-width: 2px;
  }
  
  .node-label {
    font-family: 'Inter', sans-serif;
    font-size: 11px;
    font-weight: 500;
    fill: hsl(var(--foreground));
    pointer-events: none;
  }

  /* Mobile dark mode improvements */
  @media (max-width: 768px) {
    .dark {
      --background: hsl(222 84% 6%);
      --card: hsl(222 84% 8%);
      --foreground: hsl(210 40% 98%);
      --muted-foreground: hsl(215 20% 80%);
      --border: hsl(217 32% 35%);
      --card-border: hsl(217 32% 35%);
    }

    /* Better contrast for mobile */
    .dark .evolution-cell {
      border: 2px solid hsl(var(--border));
    }

    .dark .dynamic-matrix-cell {
      border: 2px solid hsl(var(--border));
      background: hsl(var(--card));
    }

    /* Ensure text is visible on mobile dark mode */
    .dark h1, .dark h2, .dark h3, .dark h4, .dark h5, .dark h6 {
      color: hsl(var(--foreground));
      font-weight: 600;
    }

    .dark p, .dark span, .dark div {
      color: hsl(var(--foreground));
    }

    /* Make buttons more visible on mobile dark */
    .dark button {
      border-width: 2px;
      font-weight: 500;
    }

    /* Technology cells better visibility */
    .dark .empty-cell {
      background: hsl(217 32% 15%);
      color: hsl(215 20% 85%);
      border: 2px solid hsl(217 32% 25%);
    }
    
    .dark .early-tech {
      background: hsl(142 76% 35%);
      color: hsl(210 40% 98%);
      border: 2px solid hsl(142 76% 45%);
    }
    
    .dark .modern-tech {
      background: hsl(221 83% 50%);
      color: hsl(210 40% 98%);
      border: 2px solid hsl(221 83% 60%);
    }
    
    .dark .current-tech {
      background: hsl(38 92% 45%);
      color: hsl(222 84% 8%);
      border: 2px solid hsl(38 92% 55%);
      font-weight: 600;
    }
  }

  /* Touch-friendly improvements */
  @media (pointer: coarse) {
    .evolution-cell, .dynamic-matrix-cell {
      min-height: 48px;
      min-width: 48px;
      touch-action: manipulation;
    }

    button {
      min-height: 44px;
      touch-action: manipulation;
    }
  }
}
